// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "title": "Hello",
    "version": "0.0.1"
  },
  "paths": {
    "/hostname": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "operationId": "getHostname",
        "responses": {
          "200": {
            "description": "returns the hostname of the machine",
            "schema": {
              "description": "the hostname of the machine",
              "type": "string"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Returns a user by ID.",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "The ID of the user to return.",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A user object.",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/user"
            }
          },
          "400": {
            "description": "The specified user ID is invalid (not a number)."
          },
          "404": {
            "description": "A user with the specified ID was not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "Optional extended description in CommonMark or HTML.",
        "produces": [
          "application/json"
        ],
        "summary": "Returns a list of users.",
        "responses": {
          "200": {
            "description": "A JSON array of user names",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/user"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "user": {
      "description": "A user is the security principal for this application.\nIt's also used as one of the main axes for reporting.\n\nA user can have friends with whom they can share what they like.",
      "type": "object",
      "title": "User represents the user for this application",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "the id for this user",
          "type": "integer",
          "format": "int64",
          "minimum": 1
        },
        "name": {
          "description": "the name for this user",
          "type": "string",
          "minLength": 3
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "title": "Hello",
    "version": "0.0.1"
  },
  "paths": {
    "/hostname": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "operationId": "getHostname",
        "responses": {
          "200": {
            "description": "returns the hostname of the machine",
            "schema": {
              "description": "the hostname of the machine",
              "type": "string"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Returns a user by ID.",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "The ID of the user to return.",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A user object.",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/user"
            }
          },
          "400": {
            "description": "The specified user ID is invalid (not a number)."
          },
          "404": {
            "description": "A user with the specified ID was not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "Optional extended description in CommonMark or HTML.",
        "produces": [
          "application/json"
        ],
        "summary": "Returns a list of users.",
        "responses": {
          "200": {
            "description": "A JSON array of user names",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/user"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "user": {
      "description": "A user is the security principal for this application.\nIt's also used as one of the main axes for reporting.\n\nA user can have friends with whom they can share what they like.",
      "type": "object",
      "title": "User represents the user for this application",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "the id for this user",
          "type": "integer",
          "format": "int64",
          "minimum": 1
        },
        "name": {
          "description": "the name for this user",
          "type": "string",
          "minLength": 3
        }
      }
    }
  }
}`))
}
